<?xml version="1.0" encoding="utf-8"?>
<!--
  有关如何配置 ASP.NET 应用程序的详细信息，请访问
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <!--公共日志组件配置-->
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="lib_rabbitmq" type="Lib.mq.RabbitMQSection,Lib" />
    <section name="lib_zookeeper" type="Lib.distributed.ZooKeeperConfigSection,Lib" />
    <!--注册日志组件-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!--申明EF节点-->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <!--配置公共日志组件使用log4net的实现-->
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1211">
        <!--<arg key="configType" value="INLINE" />-->
        <arg key="configType" value="FILE-WATCH" />
        <arg key="configFile" value="~/App_Data/Config/elk_sentry.config" />
      </factoryAdapter>
    </logging>
  </common>
  <lib_rabbitmq HostName="mq.qipeilong.net" UserName="admin" Password="mypass" VirtualHost="/" />
  <lib_zookeeper SessionTimeOut="5000" Server="zk.qipeilong.net" MasterSlavePath="/" DistributedLockPath="/lock" />
  <connectionStrings>
    <add name="db_" connectionString="database=hiwjcn_auth;server=127.0.0.1;port=3306;characterset=utf8;user id=root;password=123;connectiontimeout=3" />
    <add name="db_sso" connectionString="User ID=sa;Initial Catalog=parties_sso;Data Source=db.qipeilong.net;Password=1q2w3e4r5T;Connect Timeout=20" />
    <add name="db" connectionString="User ID=sa;Initial Catalog=auth_test;Data Source=db.qipeilong.net;Password=1q2w3e4r5T;Connect Timeout=20" />
    <add name="RedisConnectionString" connectionString="redis.qipeilong.net:6479" />
    <add name="ES" connectionString="http://es.qipeilong.net:9200/" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!--加载插件-->
    <add key="LoadPlugin" value="true=" />
    <add key="disable_timestamp_check" value="true" />
    <add key="sign_key" value="cqmyg-ysdss-jtwmy-dtsgx" />
    <add key="CookieDomain" value="" />
    <!--允许跨域ajax的域名-->
    <add key="Origin_Allow" value="local" />
    <!--跨域域名用逗号隔开-->
    <add key="AllowDomains" value="" />
    <!--七牛-->
    <add key="QiniuAccessKey" value="IJ0GgfyMaCR_k-4yOVX6Ji_LImhMxjcnvOz2zBNP" />
    <add key="QiniuSecretKey" value="Kk5-w2nxc1b_MpjhC4ocPr9jfK36O11vaGVEY6hD" />
    <add key="QiniuBucketName" value="hiwjcn" />
    <add key="QiniuBaseUrl" value="http://hiwjcn.qiniudn.com/" />
    <!--15天-->
    <add key="CookieExpiresMinutes" value="21600" />
    <add key="CacheExpiresMinutes" value="1" />
    <!--auth配置，默认client信息-->
    <add key="auth.client_id" value="auth.official.client.id" />
    <add key="auth.client_security" value="auth.official.client.security" />
    <!--下面还要配置途虎api请求密钥，安全起见，没有放在项目中，发布的时候请注意加上-->
  </appSettings>
  <!--
    有关 web.config 更改的说明，请参见 http://go.microsoft.com/fwlink/?LinkId=235367。

    可在 <httpRuntime> 标记上设置以下特性。
      <system.Web>
        <httpRuntime targetFramework="4.6.2" />
      </system.Web>
  -->
  <system.web>
    <httpRuntime requestValidationMode="2.0" targetFramework="4.5" />
    <compilation debug="true" targetFramework="4.6.2">
      <assemblies>
        <add assembly="System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </assemblies>
    </compilation>
    <httpModules>
      <!--在http请求中缓存autofac child scope-->
      <add name="autofac_scope_manager" type="Lib.ioc.RequestScopeModule,Lib" />
    </httpModules>
    <!--<trust level="Full" originUrl="" />-->
    <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8" responseHeaderEncoding="utf-8" />
    <!--MVC中无法使用 ResponseRewrite（暂时使用aspx作为错误页面）asp.net自定义错误404不返回404状态，这里禁用了，自己过滤错误-->
    <customErrors mode="RemoteOnly" defaultRedirect="/ErrorPage/404.html" redirectMode="ResponseRewrite">
      <error statusCode="404" redirect="/ErrorPage/404.html" />
      <error statusCode="403" redirect="/ErrorPage/403.html" />
      <error statusCode="500" redirect="/ErrorPage/500.html" />
    </customErrors>
    <pages validateRequest="false" />
    <!--<sessionState mode="StateServer" stateConnectionString="tcpip=127.0.0.1:42424" timeout="30"></sessionState>-->
    <sessionState cookieName="SID" mode="Custom" customProvider="RedisSessionProvider">
      <providers>
        <!--使用mysql保存session，使用mysql.web组件（安装此组建会自动添加很多配置节点，只要保留下面节点就可以了）-->
        <!--http://dev.mysql.com/downloads/connector/net/ 选择source code下载-->
        <add name="MySqlSessionProvider" type="Lib.mvc.MySQLSessionProvider,Lib" AppID="1024" />
        <!--也可以使用redis存储session，组件：RedisSessionStateProvider-->
        <!-- https://github.com/Azure/aspnet-redis-providers/wiki -->
        <!-- https://www.nuget.org/packages/Microsoft.Web.RedisSessionStateProvider/ -->
        <!-- https://docs.microsoft.com/en-us/azure/redis-cache/cache-aspnet-session-state-provider -->
        <add name="RedisSessionProvider" type="Microsoft.Web.Redis.RedisSessionStateProvider" connectionString="redis.qipeilong.net:6479" applicationName="auth_server" databaseId="9" />
      </providers>
    </sessionState>
  </system.web>
  <system.net>
    <settings>
      <!--解决错误：服务器提交了协议冲突. Section=ResponseHeader Detail=CR 后面必须是 LF 在 Syst-->
      <httpWebRequest useUnsafeHeaderParsing="true" />
    </settings>
  </system.net>
  <system.webServer>
    <!--这个是定义iis错误页面（iis7+有效），上面的是定义asp.net错误页面，只有File才能保持错误状态-->
    <!--
    <httpErrors errorMode="Custom" existingResponse="Replace" defaultResponseMode="ExecuteURL">
      <clear />
      <error responseMode="File" statusCode="404" path="ErrorPage\404.html" />
      <error responseMode="File" statusCode="403" path="ErrorPage\403.html" />
      <error responseMode="File" statusCode="400" path="ErrorPage\500.html" />
    </httpErrors>
    -->
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <!--在http请求中缓存autofac child scope-->
      <add name="autofac_scope_manager" type="Lib.ioc.RequestScopeModule,Lib" />
    </modules>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.6.2.0" newVersion="4.6.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="MySql.Data" publicKeyToken="c5687fc88969c44d" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.9.10.0" newVersion="6.9.10.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging.Core" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.4.1.0" newVersion="3.4.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.4.1.0" newVersion="3.4.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reflection" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.0" newVersion="4.1.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.Serialization.Primitives" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.2.0" newVersion="4.1.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reflection.TypeExtensions" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.0" newVersion="4.1.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="65536000" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" minFreeMemoryPercentageToActivateService="0" />
  </system.serviceModel>
</configuration>